{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/Auth-tutorial/frontend/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function submitAuth(_ref) {\n  let {\n    request\n  } = _ref;\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const searchParms = new URL(request.url).searchParams;\n  const mode = searchParms.get('mode') || 'login';\n  if (mode !== 'signup' && mode !== 'login') {\n    throw json({\n      message: 'Incorrect mode selected'\n    }, {\n      status: 422\n    });\n  }\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Can\\'t authenticate'\n    }, {\n      status: 500\n    });\n  }\n  const resDate = await response.json();\n  const token = resDate.token;\n  localStorage.setItem('token', token);\n  let expiration = new Date();\n  expiration.setHours(expiration.getHours + 1);\n  con;\n  //localStorage.setItem('expiration', expiration.toISOString())\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","submitAuth","_ref","request","data","formData","authData","email","get","password","searchParms","URL","url","searchParams","mode","message","status","response","fetch","method","headers","body","JSON","stringify","ok","resDate","token","localStorage","setItem","expiration","Date","setHours","getHours","con","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/Auth-tutorial/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function submitAuth({request}){\n  const data = await request.formData()\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  }\n  const searchParms = new URL(request.url).searchParams\n  const mode = searchParms.get('mode') || 'login'\n  if(mode !== 'signup' && mode !== 'login'){\n    throw json({message: 'Incorrect mode selected'}, {status: 422})\n  }\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": 'application/json'\n  },\n    body: JSON.stringify(authData)\n  })\n\n  if(response.status === 422 || response.status === 401){\n    return response\n  }\n if(!response.ok){\n  throw json({message: 'Can\\'t authenticate'}, {status: 500})\n }\n  const resDate = await response.json()\n  const token = resDate.token\n  localStorage.setItem('token', token)\n  let expiration = new Date()\n  expiration.setHours(expiration.getHours + 1)\n  con\n  //localStorage.setItem('expiration', expiration.toISOString())\n  return redirect('/')\n \n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,UAAUA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAACC;EAAO,CAAC,GAAAD,IAAA;EACxC,MAAME,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,EAAE;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,QAAQ,EAAEL,IAAI,CAACI,GAAG,CAAC,UAAU;EAC/B,CAAC;EACD,MAAME,WAAW,GAAG,IAAIC,GAAG,CAACR,OAAO,CAACS,GAAG,CAAC,CAACC,YAAY;EACrD,MAAMC,IAAI,GAAGJ,WAAW,CAACF,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAC/C,IAAGM,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,OAAO,EAAC;IACvC,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACjE;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGJ,IAAI,EAAE;IAC5DK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IACpB,CAAC;IACCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAGW,QAAQ,CAACD,MAAM,KAAK,GAAG,IAAIC,QAAQ,CAACD,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOC,QAAQ;EACjB;EACD,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACf,MAAMlC,IAAI,CAAC;MAACyB,OAAO,EAAE;IAAqB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC5D;EACC,MAAMS,OAAO,GAAG,MAAMR,QAAQ,CAAC3B,IAAI,EAAE;EACrC,MAAMoC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,IAAIG,UAAU,GAAG,IAAIC,IAAI,EAAE;EAC3BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,GAAG,CAAC,CAAC;EAC5CC,GAAG;EACH;EACA,OAAO1C,QAAQ,CAAC,GAAG,CAAC;AAEtB;AAAC,IAAAS,EAAA;AAAAkC,YAAA,CAAAlC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}